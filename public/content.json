{"meta":{"title":"Hexo","subtitle":"My GitHub Blog !","description":"None","author":"Wu Shang","url":"http://wsdever.github.io"},"pages":[{"title":"","date":"2016-10-01T13:57:54.797Z","updated":"2016-10-01T13:57:54.797Z","comments":false,"path":"tags/index.html","permalink":"http://wsdever.github.io/tags/index.html","excerpt":"","text":""},{"title":"webpages","date":"2016-10-01T13:57:54.798Z","updated":"2016-10-01T13:57:54.798Z","comments":false,"path":"webpages/index.html","permalink":"http://wsdever.github.io/webpages/index.html","excerpt":"","text":""},{"title":"resume","date":"2016-09-24T02:49:15.000Z","updated":"2016-10-01T13:57:54.797Z","comments":true,"path":"resume/index.html","permalink":"http://wsdever.github.io/resume/index.html","excerpt":"","text":""}],"posts":[{"title":"12356","slug":"12356","date":"2016-10-01T14:50:51.000Z","updated":"2016-10-01T14:50:51.766Z","comments":true,"path":"2016/10/01/12356/","link":"","permalink":"http://wsdever.github.io/2016/10/01/12356/","excerpt":"","text":"","categories":[{"name":"html5","slug":"html5","permalink":"http://wsdever.github.io/categories/html5/"}],"tags":[{"name":"html5","slug":"html5","permalink":"http://wsdever.github.io/tags/html5/"}],"keywords":[{"name":"html5","slug":"html5","permalink":"http://wsdever.github.io/categories/html5/"}]},{"title":"1235","slug":"1235","date":"2016-10-01T14:49:51.000Z","updated":"2016-10-01T14:49:51.365Z","comments":true,"path":"2016/10/01/1235/","link":"","permalink":"http://wsdever.github.io/2016/10/01/1235/","excerpt":"","text":"","categories":[{"name":"html5","slug":"html5","permalink":"http://wsdever.github.io/categories/html5/"}],"tags":[{"name":"html5","slug":"html5","permalink":"http://wsdever.github.io/tags/html5/"}],"keywords":[{"name":"html5","slug":"html5","permalink":"http://wsdever.github.io/categories/html5/"}]},{"title":"123","slug":"123","date":"2016-10-01T14:46:52.000Z","updated":"2016-10-01T14:46:52.954Z","comments":true,"path":"2016/10/01/123/","link":"","permalink":"http://wsdever.github.io/2016/10/01/123/","excerpt":"","text":"","categories":[],"tags":[],"keywords":[]},{"title":"Hello World","slug":"hello-world","date":"2016-10-01T14:42:11.500Z","updated":"2016-10-01T14:46:46.032Z","comments":true,"path":"2016/10/01/hello-world/","link":"","permalink":"http://wsdever.github.io/2016/10/01/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[],"keywords":[]},{"title":"20150321","slug":"20150321","date":"2016-10-01T13:17:23.000Z","updated":"2016-10-01T13:17:23.051Z","comments":true,"path":"2016/10/01/20150321/","link":"","permalink":"http://wsdever.github.io/2016/10/01/20150321/","excerpt":"","text":"","categories":[],"tags":[],"keywords":[]},{"title":"html5-canvas-模仿绘制360水晶球形进度条","slug":"20160910","date":"2016-09-10T02:07:07.000Z","updated":"2016-10-01T13:57:54.796Z","comments":true,"path":"2016/09/10/20160910/","link":"","permalink":"http://wsdever.github.io/2016/09/10/20160910/","excerpt":"","text":"使用场景使用html5的canvas写的一个类似360清理大师那样的球形清理进度条，如下图所示 绘制过程画外边的白色圆框123ctx.arc(250, 250, 100, 0, Math.PI * 2, false);ctx.strokeStyle = &apos;#fff&apos;; ctx.lineWidth = &quot;10&quot;; 画里面的红色圆123ctx.arc(250, 250, 100, 0, Math.PI * 2, false);ctx.fillStyle = &quot;red&quot;;ctx.fill(); 画下面的绿色部分1234567var ac = (r - n * (2*r/10)) / r ;var ang1 = Math.asin(ac) ;var ang2 = Math.PI - ang1 ;var canvas = document.getElementById(&quot;canvas&quot;);var ctx = canvas.getContext(&quot;2d&quot;);ctx.beginPath();ctx.arc(250, 250, 100, ang1, ang2 , false); 但这只能画出一个水平的，其中r为半径，n为当前的进度转化成 10 以内的数，比如80%，对应着 8 。要画出下面波浪，还需要在下方使用一条二次贝塞尔曲线对路径进行封闭，并使用由下向上的线性渐变进行填充。12345ctx.bezierCurveTo(cx1,cy1,cx2,cy2,ex,by);var landStyle = ctx.createLinearGradient(250 ,250 + 1.2*r ,250,250 - 1.2*r);landStyle.addColorStop(0,&quot;#580&quot;);landStyle.addColorStop(1,&quot;#030&quot;);ctx.fillStyle = landStyle; 动态画进度数字1234567ctx.beginPath();txt = n * 10 + &apos;%&apos;;ctx.font=&quot;30px Verdana&quot;;ctx.lineWidth = &quot;1&quot;;ctx.clearRect(250 - 0.35*r , 250 + 1.5 * r - 30, 100, 40);ctx.fillStyle = &quot;#fff&quot; ;ctx.fillText(txt,250 - 0.35*r , 250 + 1.5*r); 至此四步，一个水晶进度就画完了，自己也可以再做些美化，基本思路就是这样。重点是对贝塞尔曲线的位置计算。 演示地址：GitHub地址：","categories":[{"name":"html5","slug":"html5","permalink":"http://wsdever.github.io/categories/html5/"}],"tags":[{"name":"html5","slug":"html5","permalink":"http://wsdever.github.io/tags/html5/"},{"name":"canvas","slug":"canvas","permalink":"http://wsdever.github.io/tags/canvas/"}],"keywords":[{"name":"html5","slug":"html5","permalink":"http://wsdever.github.io/categories/html5/"}]},{"title":"html5-IndexedDb之使用方法","slug":"20160815","date":"2016-08-15T14:07:07.000Z","updated":"2016-10-01T13:39:45.245Z","comments":true,"path":"2016/08/15/20160815/","link":"","permalink":"http://wsdever.github.io/2016/08/15/20160815/","excerpt":"","text":"","categories":[{"name":"javascript","slug":"javascript","permalink":"http://wsdever.github.io/categories/javascript/"}],"tags":[{"name":"jquery","slug":"jquery","permalink":"http://wsdever.github.io/tags/jquery/"},{"name":"javascript","slug":"javascript","permalink":"http://wsdever.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://wsdever.github.io/tags/html/"}],"keywords":[{"name":"javascript","slug":"javascript","permalink":"http://wsdever.github.io/categories/javascript/"}]},{"title":"Html5-canvas-绘制圆环渐变进度条","slug":"20160813","date":"2016-08-13T07:22:05.000Z","updated":"2016-10-01T13:57:54.796Z","comments":true,"path":"2016/08/13/20160813/","link":"","permalink":"http://wsdever.github.io/2016/08/13/20160813/","excerpt":"","text":"使用场景项目上要用到一个圆环形的进度条，同时随着值的不同，颜色也不同，但是找了很多，都是水平进度条，或者径向渐变，不满足需求。 思路canvas的api中已提供了两种，径向和线性渐变，并没有这种环形的渐变，所以很容易画出对称渐变。但是canvas提供了使用Pattern来绘制，Pattern可以是图片等其它对像，那么这里就使用到这个api，需要使用一张环形渐变的图像来绘制非对称渐变。 绘制对称环形渐变这里使用的（水平）线性渐变。先使用createLinearGradient创建渐变，然后使用strokeStyle进行设置，然后使用stroke绘制。123456789101112131415161718var canvas = document.getElementById(&quot;canvas&quot;);var ctx = canvas.getContext(&apos;2d&apos;);ctx.lineWidth = 5;ctx.beginPath(); ctx.moveTo(170, 120);var grd=ctx.createLinearGradient(0,0,170,0);grd.addColorStop(&quot;0&quot;,&quot;black&quot;);grd.addColorStop(&quot;0.3&quot;,&quot;magenta&quot;);grd.addColorStop(&quot;0.5&quot;,&quot;blue&quot;);grd.addColorStop(&quot;0.6&quot;,&quot;green&quot;);grd.addColorStop(&quot;0.8&quot;,&quot;yellow&quot;);grd.addColorStop(1,&quot;red&quot;);ctx.strokeStyle = grd;ctx.arc(120, 120, 50, 0 ,Math.PI*2);ctx.stroke(); // 画圆 效果如下： 绘制非对称环形渐变先使用ps制作一张环形渐变的图片。实现代码如下：12345678910111213141516171819202122var canvas = document.getElementById(&quot;canvas2&quot;);var ctx2 = canvas.getContext(&apos;2d&apos;);ctx2.lineWidth = 5;var img;img = new Image();img.src = &quot;./canvas.png&quot;;if (img.complete) &#123; setImageFill();&#125; else &#123; img.onload = setImageFill;&#125;var newFill = null;function setImageFill() &#123; newFill = ctx2.createPattern(img, &apos;no-repeat&apos;); ctx.beginPath(); ctx.strokeStyle = newFill; ctx.arc(50, 50, 46, 0, Math.PI*2, false); ctx.stroke();&#125; 效果如下： 效果已经基本上出现了，下面还需要让其动起来。 动态绘制其实就是添加一个动态函数，在这里使用html5新添加的requestAnimationFrame，这个函数有兼容性的考虑，需要注意！这里不做处理！代码如下：123456789101112131415161718192021222324252627282930313233343536var canvas = document.getElementById(&quot;canvas2&quot;);var ctx2 = canvas.getContext(&apos;2d&apos;);ctx2.lineWidth = 5;ctx2.lineCap=&quot;round&quot;;var img;img = new Image();img.src = &quot;canvas.png&quot;;if (img.complete) &#123; setImageFill(); &#125; else &#123; img.onload = setImageFill; &#125; var newFill = null; function setImageFill() &#123; newFill = ctx2.createPattern(img, &apos;no-repeat&apos;); drawCircle(ctx2, 0,50); &#125; var stop = null ; function drawCircle(ctx, x, end) &#123; ctx.clearRect(0, 0, 300, 300); ctx.beginPath(); ctx.strokeStyle = newFill; if (x &lt; Math.PI*2*end/100) &#123; x += Math.PI/100; &#125; else &#123; window.cancelAnimationFrame(stop) &#125; ctx.arc(50, 50, 46, 0, x, false); ctx.stroke(); stop = requestAnimationFrame(function () &#123; drawCircle(ctx, x ,end); &#125;); &#125; 其中的drawCircle第三个参数就是对应的值。效果如下： 演示地址点击演示Github","categories":[{"name":"html5","slug":"html5","permalink":"http://wsdever.github.io/categories/html5/"}],"tags":[{"name":"html5","slug":"html5","permalink":"http://wsdever.github.io/tags/html5/"},{"name":"canvas","slug":"canvas","permalink":"http://wsdever.github.io/tags/canvas/"}],"keywords":[{"name":"html5","slug":"html5","permalink":"http://wsdever.github.io/categories/html5/"}]},{"title":"Jquery无法修改input的type属性的替代解决方法","slug":"20150324","date":"2015-03-24T02:07:07.000Z","updated":"2016-10-01T13:57:54.795Z","comments":true,"path":"2015/03/24/20150324/","link":"","permalink":"http://wsdever.github.io/2015/03/24/20150324/","excerpt":"","text":"使用场景需要实现的效果：一个输入框，当输入框未获得焦点的时候，显示为 “请输入密码”；当输入内容并失去焦点的时候，输入内容显示为” * ”，如果没有输入仍然显示“请输入密码”,通常做法是： 使用text，隐藏域中，然后配合onkeypress、onkeyup、focus、blur等事件基本可以达到要求，此种方法比较麻烦; 用text和password两个输入框，模拟 实现方法在这里主要讲讲如何用第二种方式实现。 html代码&lt;input type=&quot;password&quot; id=&quot;input_password&quot; value=&apos;&apos; style=&quot;display:none;color:#444;&quot;/&gt; &lt;input type=&quot;text&quot; id=&quot;showPwd&quot; value=&quot;请输入密码&quot; style=&quot;color:#c0c0c0&quot;/&gt; js代码$(&quot;#showPwd&quot;).focus(function() { var text_value = $(this).val(); if(text_value == &quot;请输入密码&quot;) { $(&quot;#showPwd&quot;).hide(); $(&quot;#input_password&quot;).show().focus(); } }); $(&quot;#input_password&quot;).blur(function() { var text_value = $(this).val(); if(text_value == &quot;&quot;) { $(&quot;#showPwd&quot;).show(); $(&quot;#input_password&quot;).hide(); } }); 至此完美解决，所有浏览器都可以使用。 扩展内容也许很多人一开始想到的是用jquery的attr修改type属性值，但是测试发现在IE上会出错，如下： uncaught exception type property can&#39;t be changed查看到jQuery 1.42源码：1234// We can&apos;t allow the type property to be changed (since it causes problems in IE)if(name === &quot;type&quot; &amp;&amp; rtype.test(elem.nodeName) &amp;&amp; elem.parentNode)&#123; jQuery.error(&quot;type property can&apos;t be changed&quot;);&#125;; 主要还是“万能”的IE浏览器禁止修改input的type属性造成的。","categories":[{"name":"javascript","slug":"javascript","permalink":"http://wsdever.github.io/categories/javascript/"}],"tags":[{"name":"jquery","slug":"jquery","permalink":"http://wsdever.github.io/tags/jquery/"},{"name":"javascript","slug":"javascript","permalink":"http://wsdever.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://wsdever.github.io/tags/html/"}],"keywords":[{"name":"javascript","slug":"javascript","permalink":"http://wsdever.github.io/categories/javascript/"}]}]}